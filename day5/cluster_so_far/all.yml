apiVersion: v1
kind: Namespace
metadata:
  name: $ENVIRONMENT
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cimple-back-deployment
  namespace: $ENVIRONMENT
  labels:
    app: cimple-back
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cimple-back
  template:
    metadata:
      name: cimple-back
      labels:
        app: cimple-back
    spec:
      serviceAccount: backend-sa
      volumes:
        - name: config-data
          emptyDir: {}
        - name: logs
          emptyDir: {}
      initContainers:
        - name: init-config
          image: alpine
          command:
            - sh
            - -c
            - |
              cat <<EOF > /opt/config.json
              {
                "events_file": "/app/logs/audit_events.log",
                "peer_url" : "http://cimple-eviewer.audit.svc.cluster.local/api/events"
              }
              EOF
          volumeMounts:
            - name: config-data
              mountPath: /opt/
      containers:
        - name: cimple-back
          image: taksan/cimple-back:v2
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: RUN_WITHOUT_DATABASE
              value: "true"
            - name: TASK_EXECUTOR
              value: /app/job-executor.sh
          volumeMounts:
            - name: logs
              mountPath: /app/logs
          startupProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 30
            periodSeconds: 10
        - name: cimple-eviewer-collector
          image: taksan/cimple-eviewer-collector:v1
          volumeMounts:
            - name: config-data
              mountPath: /opt/
            - name: logs
              mountPath: /app/logs
---
apiVersion: v1
kind: Service
metadata:
  name: cimple-back
  namespace: $ENVIRONMENT
spec:
  selector:
    app: cimple-back
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cimple-back
  namespace: $ENVIRONMENT
spec:
  ingressClassName: nginx
  rules:
    - host: back.$ENVIRONMENT.cimple.bootcamp
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cimple-back
                port:
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cimple-front-deployment
  namespace: $ENVIRONMENT
  labels:
    app: cimple-front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cimple-front
  template:
    metadata:
      name: cimple-front
      labels:
        app: cimple-front
    spec:
      containers:
        - name: cimple-front
          image: taksan/cimple-front:v2
          ports:
            - containerPort: 80
              name: http
          env:
            - name: BACKEND_URL
              value: http://back.$ENVIRONMENT.cimple.bootcamp
          startupProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: cimple-front
  namespace: $ENVIRONMENT
spec:
  selector:
    app: cimple-front
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cimple-front
  namespace: $ENVIRONMENT
spec:
  ingressClassName: nginx
  rules:
    - host: front.$ENVIRONMENT.cimple.bootcamp
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cimple-front
                port:
                  number: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-sa
  namespace: $ENVIRONMENT
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-executor
  namespace: $ENVIRONMENT
rules:
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backend-role-binding
  namespace: $ENVIRONMENT
subjects:
  - kind: ServiceAccount
    name: backend-sa
roleRef:
  kind: Role
  name: job-executor
  apiGroup: rbac.authorization.k8s.io
